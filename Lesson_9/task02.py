# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é—É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
# –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤

from typing import Callable
import random
from functools import wraps


def decor(func: Callable):
    @wraps(func)
    def wrapper(*args, **kwargs):
        num, cnt, *_ = args
        if num not in range(1, 101):
            print('–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞')
            num = random.randint(1, 100)
        if cnt not in range(1, 11):
            print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–Ω–µ –¥–∏–∞–ø–æ–∑–æ–Ω–∞ ')
            cnt = random.randint(1, 10)
        return func(num, cnt)

    return wrapper


@decor
def func_cnt(num: int, cnt: int):
    cnt_user = 0
    print(f'–£ –≤–∞—Å {cnt} –ø–æ–ø—ã—Ç–æ–∫')
    while cnt:
        cnt_user += 1
        num_user = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:'))
        if num == num_user:
            return (f"–í—ã —É–≥–æ–¥–∞–ª–∏ —á–∏—Å–ª–æ {num} –∑–∞ {cnt_user} –ø–æ–ø—ã—Ç–æ–∫.")

        if num_user > num:
            print('–ú–µ–Ω—å—à–µ')
        if num_user < num:
            print('–ë–æ–ª—å—à–µ')
        cnt -= 1
    else:
        return (f'–í—ã –Ω–µ –æ—Ç–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ {num} –∑–∞ {cnt_user} –ø–æ–ø—ã—Ç–æ–∫.')


# func_cnt(2000, 20)